"use client";
import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { useEffect, useState } from "react";
import { NextIntlClientProvider, useMessages } from "next-intl";
import en from "../../messages/en.json";
import hi from "../../messages/hi.json";
import { SessionProvider } from "next-auth/react";
import Head from "next/head";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

// export const metadata: Metadata = {
//   title: "Smart Pashu",
//   description: "Generated by create next app",
// };

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const [locale, setLocale] = useState(() => {
    if (typeof window !== "undefined") {
      return localStorage.getItem("locale") || "en";
    }
    return "en";
  });

  useEffect(() => {
    const storedLocale =
      typeof window !== "undefined" && localStorage.getItem("locale");
    if (storedLocale && storedLocale !== locale) {
      setLocale(storedLocale);
    }
  }, []);

  const messages = locale === "hi" ? hi : en;

  return (
    <html lang={locale}>
      <Head>
        <title>Smart Pashu</title>
        <meta name="description" content="Generated by create next app" />
      </Head>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <SessionProvider>
          <NextIntlClientProvider locale={locale} messages={messages}>
            {children}
          </NextIntlClientProvider>
        </SessionProvider>
      </body>
    </html>
  );
}
